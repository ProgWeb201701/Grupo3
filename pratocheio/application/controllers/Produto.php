<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Produto extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Produto_model');
    } 

    /*
     * Listing of produtos
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('produto/index?');
        $config['total_rows'] = $this->Produto_model->get_all_produtos_count();
        $this->pagination->initialize($config);

        $data['produtos'] = $this->Produto_model->get_all_produtos($params);
        
        $data['_view'] = 'produto/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new produto
     */
    function adicionar()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nome_produto','Nome Produto','required|max_length[100]');
		$this->form_validation->set_rules('preco','Preco','required|numeric');
		$this->form_validation->set_rules('descri','Descri','required|max_length[255]');
		$this->form_validation->set_rules('foto','Foto','max_length[255]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nome_produto' => $this->input->post('nome_produto'),
				'preco' => $this->input->post('preco'),
				'descri' => $this->input->post('descri'),
				'foto' => $this->input->post('foto'),
            );
            
            $produto_id = $this->Produto_model->add_produto($params);
            redirect('produto/index');
        }
        else
        {            
            $data['_view'] = 'produto/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a produto
     */
    function editar($id_produto)
    {   
        // check if the produto exists before trying to edit it
        $data['produto'] = $this->Produto_model->get_produto($id_produto);
        
        if(isset($data['produto']['id_produto']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nome_produto','Nome Produto','required|max_length[100]');
			$this->form_validation->set_rules('preco','Preco','required|numeric');
			$this->form_validation->set_rules('descri','Descri','required|max_length[255]');
			$this->form_validation->set_rules('foto','Foto','max_length[255]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nome_produto' => $this->input->post('nome_produto'),
					'preco' => $this->input->post('preco'),
					'descri' => $this->input->post('descri'),
					'foto' => $this->input->post('foto'),
                );

                $this->Produto_model->update_produto($id_produto,$params);            
                redirect('produto/index');
            }
            else
            {
                $data['_view'] = 'produto/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The produto you are trying to edit does not exist.');
    } 

    /*
     * Deleting produto
     */
    function remover($id_produto)
    {
        $produto = $this->Produto_model->get_produto($id_produto);

        // check if the produto exists before trying to delete it
        if(isset($produto['id_produto']))
        {
            $this->Produto_model->delete_produto($id_produto);
            redirect('produto/index');
        }
        else
            show_error('The produto you are trying to delete does not exist.');
    }
    
}
