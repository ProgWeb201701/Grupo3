<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Cliente extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Cliente_model');
    } 

    /*
     * Listing of clientes
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('cliente/index?');
        $config['total_rows'] = $this->Cliente_model->get_all_clientes_count();
        $this->pagination->initialize($config);

        $data['clientes'] = $this->Cliente_model->get_all_clientes($params);
        
        $data['_view'] = 'cliente/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new cliente
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('email','Email','required|valid_email');
		$this->form_validation->set_rules('nome','Nome','required');
		$this->form_validation->set_rules('telefone','Telefone','required');
		$this->form_validation->set_rules('senha','Senha','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'senha' => $this->input->post('senha'),
				'email' => $this->input->post('email'),
				'nome' => $this->input->post('nome'),
				'telefone' => $this->input->post('telefone'),
				'dt_nasc' => $this->input->post('dt_nasc'),
            );
            
            $cliente_id = $this->Cliente_model->add_cliente($params);
            redirect('cliente/index');
        }
        else
        {            
            $data['_view'] = 'cliente/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a cliente
     */
    function edit($id_cliente)
    {   
        // check if the cliente exists before trying to edit it
        $data['cliente'] = $this->Cliente_model->get_cliente($id_cliente);
        
        if(isset($data['cliente']['id_cliente']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('email','Email','required|valid_email');
			$this->form_validation->set_rules('nome','Nome','required');
			$this->form_validation->set_rules('telefone','Telefone','required');
			$this->form_validation->set_rules('senha','Senha','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'senha' => $this->input->post('senha'),
					'email' => $this->input->post('email'),
					'nome' => $this->input->post('nome'),
					'telefone' => $this->input->post('telefone'),
					'dt_nasc' => $this->input->post('dt_nasc'),
                );

                $this->Cliente_model->update_cliente($id_cliente,$params);            
                redirect('cliente/index');
            }
            else
            {
                $data['_view'] = 'cliente/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The cliente you are trying to edit does not exist.');
    } 

    /*
     * Deleting cliente
     */
    function remove($id_cliente)
    {
        $cliente = $this->Cliente_model->get_cliente($id_cliente);

        // check if the cliente exists before trying to delete it
        if(isset($cliente['id_cliente']))
        {
            $this->Cliente_model->delete_cliente($id_cliente);
            redirect('cliente/index');
        }
        else
            show_error('The cliente you are trying to delete does not exist.');
    }
    
}
