<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Cliente extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model('Cliente_model');
        $this->load->model('Endereco_model');
    }

    /*
     * Listing of clientes
     */

    function index() {
        $params['limit']  = RECORDS_PER_PAGE;
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

        $config               = $this->config->item('pagination');
        $config['base_url']   = site_url('cliente/index?');
        $config['total_rows'] = $this->Cliente_model->get_all_clientes_count();
        $this->pagination->initialize($config);

        $data['clientes'] = $this->Cliente_model->get_all_clientes($params);

        $data['titulo_pagina'] = 'Lista de Clientes';
        $data['corpo_pagina']  = 'cliente/index.php';
        $this->load->view('includes/template.php', $data);
    }

    /*
     * Adding a new cliente
     */

    function adicionar() {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('email', 'Email', 'required|valid_email');
        $this->form_validation->set_rules('nome', 'Nome', 'required');
        $this->form_validation->set_rules('telefone', 'Telefone', 'required');
        $this->form_validation->set_rules('senha', 'Senha', 'required');

        $this->form_validation->set_rules('referencia', 'Referencia', 'max_length[100]');
        $this->form_validation->set_rules('complemento', 'Complemento', 'max_length[100]');
        $this->form_validation->set_rules('cidade', 'Cidade', 'required|max_length[100]');
        $this->form_validation->set_rules('numero', 'Numero', 'required|max_length[5]');
        $this->form_validation->set_rules('bairro', 'Bairro', 'required|max_length[100]');
        $this->form_validation->set_rules('rua', 'Rua', 'required|max_length[100]');
        $this->form_validation->set_rules('cep', 'Cep', 'required|max_length[20]');

        if ($this->form_validation->run()) {
            $params = array(
                'senha'    => md5($this->input->post('senha')),
                'email'    => $this->input->post('email'),
                'nome'     => $this->input->post('nome'),
                'telefone' => $this->input->post('telefone'),
                'dt_nasc'  => dataSQL($this->input->post('dt_nasc')),
            );

            $cliente_id = $this->Cliente_model->add_cliente($params);
            if ($cliente_id) {
                $paramsEndereco = array(
                    'id_cliente'  => $cliente_id,
                    'rua'         => $this->input->post('rua'),
                    'numero'      => $this->input->post('numero'),
                    'bairro'      => $this->input->post('bairro'),
                    'cep'         => $this->input->post('cep'),
                    'referencia'  => $this->input->post('referencia'),
                    'complemento' => $this->input->post('complemento'),
                    'cidade'      => $this->input->post('cidade')
                );

                $endereco_id = $this->Endereco_model->add_endereco($paramsEndereco);
            } else {
                mostra_mensagem("Erro ao gravar os dados do cliente");
            }

            if (($this->session->userdata('logado') == 1) && ($this->session->userdata('tipo_login') == 'F')) {
                redirect('cliente/index');
            } else {
                redirect('inicial/mostraLogin');
            }
        } else {
            $data['titulo_pagina'] = 'Cadastro de Cliente';
            $data['corpo_pagina']  = 'cliente/add.php';
            $this->load->view('includes/template.php', $data);
        }
    }

    /*
     * Editing a cliente
     */

    function editar($id_cliente) {
        // check if the cliente exists before trying to edit it
        $data['cliente']  = $this->Cliente_model->get_cliente($id_cliente);
        $data['endereco'] = $this->Endereco_model->get_by_cliente($id_cliente);
        $id_endereco      = $data['endereco']['id_endereco'];

        if (isset($data['cliente']['id_cliente'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('email', 'Email', 'required|valid_email');
            $this->form_validation->set_rules('nome', 'Nome', 'required');
            $this->form_validation->set_rules('telefone', 'Telefone', 'required');

            $this->form_validation->set_rules('referencia', 'Referencia', 'max_length[100]');
            $this->form_validation->set_rules('complemento', 'Complemento', 'max_length[100]');
            $this->form_validation->set_rules('cidade', 'Cidade', 'required|max_length[100]');
            $this->form_validation->set_rules('numero', 'Numero', 'required|max_length[5]');
            $this->form_validation->set_rules('bairro', 'Bairro', 'required|max_length[100]');
            $this->form_validation->set_rules('rua', 'Rua', 'required|max_length[100]');
            $this->form_validation->set_rules('cep', 'Cep', 'required|max_length[20]');

            if ($this->form_validation->run()) {
                $params = array(
                    'email'    => $this->input->post('email'),
                    'nome'     => $this->input->post('nome'),
                    'telefone' => $this->input->post('telefone'),
                    'dt_nasc'  => dataSQL($this->input->post('dt_nasc'))
                );

                //Verifica se a senha foi preenchida
                $strSenha = $this->input->post('senha');
                if (!empty($strSenha)) {
                    $params['senha'] = md5($this->input->post('senha'));
                }
                
                $this->Cliente_model->update_cliente($id_cliente, $params);

                $paramsEndereco = array(
                    'id_cliente'  => $id_cliente,
                    'rua'         => $this->input->post('rua'),
                    'numero'      => $this->input->post('numero'),
                    'bairro'      => $this->input->post('bairro'),
                    'cep'         => $this->input->post('cep'),
                    'referencia'  => $this->input->post('referencia'),
                    'complemento' => $this->input->post('complemento'),
                    'cidade'      => $this->input->post('cidade')
                );

                $this->Endereco_model->update_endereco($id_endereco, $paramsEndereco);

                if (($this->session->userdata('logado') == 1) && ($this->session->userdata('tipo_login') == 'F')) {
                    redirect('cliente/index');
                } else {
                    redirect('inicial/principal');
                }
            } else {
                $data['titulo_pagina'] = 'Editar Cliente';
                $data['corpo_pagina']  = 'cliente/edit.php';
                $this->load->view('includes/template.php', $data);
            }
        } else
            mostra_mensagem('O cliente que você está tentando editar não existe.');
    }

    /*
     * Deleting cliente
     */

    function remover($id_cliente) {
        $cliente = $this->Cliente_model->get_cliente($id_cliente);

        // check if the cliente exists before trying to delete it
        if (isset($cliente['id_cliente'])) {
            $this->Endereco_Model->delete_by_cliente($id_cliente);
            $this->Cliente_model->delete_cliente($id_cliente);
            redirect('cliente/index');
        } else
            mostra_mensagem('O cliente que você está tentando remover não existe.');
    }

}
