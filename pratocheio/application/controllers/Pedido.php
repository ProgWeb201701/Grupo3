<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pedido extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pedido_model');
    } 

    /*
     * Listing of pedidos
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('pedido/index?');
        $config['total_rows'] = $this->Pedido_model->get_all_pedidos_count();
        $this->pagination->initialize($config);

        $data['pedidos'] = $this->Pedido_model->get_all_pedidos($params);
        
        $data['_view'] = 'pedido/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new pedido
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('valor_total','Valor Total','required|numeric');
		$this->form_validation->set_rules('tipo_pagamento','Tipo Pagamento','required');
		$this->form_validation->set_rules('dataHora','DataHora','required');
		$this->form_validation->set_rules('troco','Troco','numeric');
		$this->form_validation->set_rules('previsaoEntrega','PrevisaoEntrega','required|max_length[20]');
		$this->form_validation->set_rules('statusAndamento','StatusAndamento','required');
		$this->form_validation->set_rules('tipoEntrega','TipoEntrega','required');
		$this->form_validation->set_rules('id_cliente','Id Cliente','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_cliente' => $this->input->post('id_cliente'),
				'valor_total' => $this->input->post('valor_total'),
				'tipo_pagamento' => $this->input->post('tipo_pagamento'),
				'dataHora' => $this->input->post('dataHora'),
				'troco' => $this->input->post('troco'),
				'previsaoEntrega' => $this->input->post('previsaoEntrega'),
				'statusAndamento' => $this->input->post('statusAndamento'),
				'tipoEntrega' => $this->input->post('tipoEntrega'),
            );
            
            $pedido_id = $this->Pedido_model->add_pedido($params);
            redirect('pedido/index');
        }
        else
        {
			$this->load->model('Cliente_model');
			$data['all_clientes'] = $this->Cliente_model->get_all_clientes();
            
            $data['_view'] = 'pedido/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a pedido
     */
    function edit($id_pedido)
    {   
        // check if the pedido exists before trying to edit it
        $data['pedido'] = $this->Pedido_model->get_pedido($id_pedido);
        
        if(isset($data['pedido']['id_pedido']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('valor_total','Valor Total','required|numeric');
			$this->form_validation->set_rules('tipo_pagamento','Tipo Pagamento','required');
			$this->form_validation->set_rules('dataHora','DataHora','required');
			$this->form_validation->set_rules('troco','Troco','numeric');
			$this->form_validation->set_rules('previsaoEntrega','PrevisaoEntrega','required|max_length[20]');
			$this->form_validation->set_rules('statusAndamento','StatusAndamento','required');
			$this->form_validation->set_rules('tipoEntrega','TipoEntrega','required');
			$this->form_validation->set_rules('id_cliente','Id Cliente','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_cliente' => $this->input->post('id_cliente'),
					'valor_total' => $this->input->post('valor_total'),
					'tipo_pagamento' => $this->input->post('tipo_pagamento'),
					'dataHora' => $this->input->post('dataHora'),
					'troco' => $this->input->post('troco'),
					'previsaoEntrega' => $this->input->post('previsaoEntrega'),
					'statusAndamento' => $this->input->post('statusAndamento'),
					'tipoEntrega' => $this->input->post('tipoEntrega'),
                );

                $this->Pedido_model->update_pedido($id_pedido,$params);            
                redirect('pedido/index');
            }
            else
            {
				$this->load->model('Cliente_model');
				$data['all_clientes'] = $this->Cliente_model->get_all_clientes();

                $data['_view'] = 'pedido/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The pedido you are trying to edit does not exist.');
    } 

    /*
     * Deleting pedido
     */
    function remove($id_pedido)
    {
        $pedido = $this->Pedido_model->get_pedido($id_pedido);

        // check if the pedido exists before trying to delete it
        if(isset($pedido['id_pedido']))
        {
            $this->Pedido_model->delete_pedido($id_pedido);
            redirect('pedido/index');
        }
        else
            show_error('The pedido you are trying to delete does not exist.');
    }
    
}
